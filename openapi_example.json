{
  "openapi": "3.0.0",
  "info": {
    "title": "Library API",
    "description": "API for managing a library system.",
    "version": "1.0.0",
    "contact": {
      "name": "API Support",
      "email": "support@example.com",
      "url": "https://example.com/support"
    }
  },
  "servers": [
    {
      "url": "https://api.example.com/v1",
      "description": "Main server"
    }
  ],
  "paths": {
    "/books": {
      "get": {
        "summary": "List all books",
        "description": "Retrieve a list of all books in the library.",
        "responses": {
          "200": {
            "description": "A JSON array of book objects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new book",
        "description": "Add a new book to the library.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewBook"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Book created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          }
        }
      }
    },
    "/books/{bookId}": {
      "get": {
        "summary": "Get a book by ID",
        "description": "Retrieve a single book by its ID.",
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "required": true,
            "description": "ID of the book to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single book object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "404": {
            "description": "Book not found"
          }
        }
      },
      "put": {
        "summary": "Update a book",
        "description": "Update a book's information.",
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "required": true,
            "description": "ID of the book to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewBook"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Book updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "404": {
            "description": "Book not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a book",
        "description": "Delete a book by its ID.",
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "required": true,
            "description": "ID of the book to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Book deleted successfully"
          },
          "404": {
            "description": "Book not found"
          }
        }
      }
    },
    "/search": {
      "get": {
        "summary": "Search books",
        "description": "Search for books based on various criteria.",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "description": "Search query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "genres",
            "in": "query",
            "required": false,
            "description": "Filter by genres",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "rating",
            "in": "query",
            "required": false,
            "description": "Filter by minimum rating",
            "schema": {
              "type": "number",
              "format": "float"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON array of book objects matching the criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Book": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true,
            "description": "Unique identifier for the book"
          },
          "title": {
            "type": "string",
            "description": "Title of the book"
          },
          "author": {
            "type": "string",
            "nullable": true,
            "description": "Author of the book"
          },
          "genres": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            },
            "description": "Genres of the book"
          },
          "publishedDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "description": "Publication date of the book"
          },
          "rating": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "Rating of the book"
          },
          "reviews": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Review"
            },
            "description": "Reviews of the book"
          },
          "availability": {
            "type": "object",
            "nullable": true,
            "properties": {
              "inStock": {
                "type": "boolean",
                "description": "Availability status of the book"
              },
              "lastChecked": {
                "type": "string",
                "format": "date-time",
                "description": "Last time the stock was checked"
              }
            },
            "description": "Availability details of the book"
          }
        }
      },
      "NewBook": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the book"
          },
          "author": {
            "type": "string",
            "description": "Author of the book"
          },
          "genres": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Genres of the book"
          },
          "publishedDate": {
            "type": "string",
            "format": "date",
            "description": "Publication date of the book"
          },
          "rating": {
            "type": "number",
            "format": "float",
            "description": "Rating of the book"
          }
        },
        "required": ["title", "author"]
      },
      "SearchCriteria": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/Book"
          },
          {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Search query"
              },
              "genres": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Filter by genres"
              },
              "rating": {
                "type": "number",
                "format": "float",
                "description": "Filter by minimum rating"
              }
            }
          }
        ]
      },
      "Review": {
        "type": "object",
        "properties": {
          "reviewer": {
            "type": "string",
            "description": "Name of the reviewer"
          },
          "comment": {
            "type": "string",
            "nullable": true,
            "description": "Review comment"
          },
          "rating": {
            "type": "number",
            "format": "float",
            "nullable": true,
            "description": "Rating given by the reviewer"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Date of the review"
          }
        }
      },
      "LibraryUser": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "Unique identifier for the user"
          },
          "name": {
            "type": "string",
            "description": "Name of the user"
          },
          "membershipStatus": {
            "type": "string",
            "enum": ["active", "inactive", "suspended"],
            "description": "Membership status of the user"
          },
          "borrowedBooks": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Book"
            },
            "description": "List of books borrowed by the user"
          },
          "address": {
            "type": "object",
            "nullable": true,
            "properties": {
              "street": {
                "type": "string",
                "description": "Street address"
              },
              "city": {
                "type": "string",
                "description": "City"
              },
              "zipCode": {
                "type": "string",
                "description": "ZIP code"
              }
            },
            "description": "Address details of the user"
          }
        }
      }
    }
  }
}
